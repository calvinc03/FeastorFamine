#include "grid_map.hpp"

const static std::map<int, std::vector<ivec2>> neighbor_map = {
        {DIRECT_NBRS, {ivec2(0, -1), ivec2(-1, 0),
                              ivec2(1,0), ivec2(0,1)}},

        {DIAGONAL_NBRS, {ivec2(-1, -1), ivec2(-1, 1),
                                ivec2(1,-1), ivec2(1,1)}},

        {ALL_NBRS, {ivec2(1,0), ivec2(1,-1),ivec2(1,1),
                           ivec2(0,-1),ivec2(0,1),
                           ivec2(-1,0),ivec2(-1,1),ivec2(-1,-1)}},
};
//static const std::map<int, ivec2> neighbors = {
//        {UP, ivec2(0, -1)},
//        {DOWN, ivec2(0, 1)},
//        {LEFT, ivec2(-1, 0)},
//        {RIGHT, ivec2(1, 0)},
//        {UL, ivec2(-1, -1)},
//        {UR, ivec2(1, -1)},
//        {LL, ivec2(-1, 1)},
//        {LR, ivec2(1, 1)},
//};

const static std::map<int, float> monster_attack_cost = {
        {MOB,              1000.0},
        {SPRING_BOSS,      0.0},
        {SUMMER_BOSS,      -0.9},
        {FALL_BOSS,        -0.9},
        {WINTER_BOSS,      5.0},
        {SPIDER,           3.0},
};

const static std::map<std::pair<int, int>, float> monster_move_cost = {
        // rabbit
        {std::pair(MOB, TERRAIN_PAVEMENT),         0.5},
        {std::pair(MOB, TERRAIN_DEFAULT),          1.0},
        {std::pair(MOB, TERRAIN_MUD),              1.5},
        {std::pair(MOB, TERRAIN_PUDDLE),           5.0},
        {std::pair(MOB, TERRAIN_DRY),              1.0},
        {std::pair(MOB, TERRAIN_FIRE),             10.0},
        {std::pair(MOB, TERRAIN_ICE),              1.0},
        // bird
        {std::pair(SPRING_BOSS, TERRAIN_PAVEMENT),         1.0},
        {std::pair(SPRING_BOSS, TERRAIN_DEFAULT),          1.0},
        {std::pair(SPRING_BOSS, TERRAIN_MUD),              1.0},
        {std::pair(SPRING_BOSS, TERRAIN_PUDDLE),           1.0},
        {std::pair(SPRING_BOSS, TERRAIN_DRY),              1.0},
        {std::pair(SPRING_BOSS, TERRAIN_FIRE),             10.0},
        {std::pair(SPRING_BOSS, TERRAIN_ICE),              1.0},
        // moose
        {std::pair(SUMMER_BOSS, TERRAIN_PAVEMENT),         1.0},
        {std::pair(SUMMER_BOSS, TERRAIN_DEFAULT),          1.2},
        {std::pair(SUMMER_BOSS, TERRAIN_MUD),              1.5},
        {std::pair(SUMMER_BOSS, TERRAIN_PUDDLE),           2.0},
        {std::pair(SUMMER_BOSS, TERRAIN_DRY),              1.2},
        {std::pair(SUMMER_BOSS, TERRAIN_FIRE),             8.0},
        {std::pair(SUMMER_BOSS, TERRAIN_ICE),              1.1},
        // bear
        {std::pair(FALL_BOSS, TERRAIN_PAVEMENT),         2.0},
        {std::pair(FALL_BOSS, TERRAIN_DEFAULT),          3.0},
        {std::pair(FALL_BOSS, TERRAIN_MUD),              2.0},
        {std::pair(FALL_BOSS, TERRAIN_PUDDLE),           1.0},
        {std::pair(FALL_BOSS, TERRAIN_DRY),              3.0},
        {std::pair(FALL_BOSS, TERRAIN_FIRE),             10.0},
        {std::pair(FALL_BOSS, TERRAIN_ICE),          1.0},
        // penguin
        {std::pair(WINTER_BOSS, TERRAIN_PAVEMENT),   0.7},
        {std::pair(WINTER_BOSS, TERRAIN_DEFAULT),    1.0},
        {std::pair(WINTER_BOSS, TERRAIN_MUD),        2.0},
        {std::pair(WINTER_BOSS, TERRAIN_PUDDLE),     5.0},
        {std::pair(WINTER_BOSS, TERRAIN_DRY),        1.0},
        {std::pair(WINTER_BOSS, TERRAIN_FIRE),       10.0},
        {std::pair(WINTER_BOSS, TERRAIN_ICE),        0.1},

//        {std::pair(FINAL_BOSS, TERRAIN_PAVEMENT),    1.0},
//        {std::pair(FINAL_BOSS, TERRAIN_DEFAULT),     1.0},
//        {std::pair(FINAL_BOSS, TERRAIN_MUD),         1.0},
//        {std::pair(FINAL_BOSS, TERRAIN_PUDDLE),      1.0},
//        {std::pair(FINAL_BOSS, TERRAIN_DRY),         1.0},
//        {std::pair(FINAL_BOSS, TERRAIN_FIRE),        1.0},
//        {std::pair(FINAL_BOSS, TERRAIN_ICE),         1.0},
//
//        {std::pair(FIREBALL_BOSS, TERRAIN_PAVEMENT), 1.0},
//        {std::pair(FIREBALL_BOSS, TERRAIN_DEFAULT),  1.0},
//        {std::pair(FIREBALL_BOSS, TERRAIN_MUD),      1.0},
//        {std::pair(FIREBALL_BOSS, TERRAIN_PUDDLE),   1.0},
//        {std::pair(FIREBALL_BOSS, TERRAIN_DRY),      1.0},
//        {std::pair(FIREBALL_BOSS, TERRAIN_FIRE),     1.0},
//        {std::pair(FIREBALL_BOSS, TERRAIN_ICE),      1.0},
//
//        {std::pair(BURROW_BOSS, TERRAIN_PAVEMENT),   1.0},
//        {std::pair(BURROW_BOSS, TERRAIN_DEFAULT),          1.0},
//        {std::pair(BURROW_BOSS, TERRAIN_MUD),              1.0},
//        {std::pair(BURROW_BOSS, TERRAIN_PUDDLE),           1.0},
//        {std::pair(BURROW_BOSS, TERRAIN_DRY),              1.0},
//        {std::pair(BURROW_BOSS, TERRAIN_FIRE),             10.0},
//        {std::pair(BURROW_BOSS, TERRAIN_ICE),              1.0},

        {std::pair(SPIDER, TERRAIN_PAVEMENT),         1.0},
        {std::pair(SPIDER, TERRAIN_DEFAULT),          1.0},
        {std::pair(SPIDER, TERRAIN_MUD),              2.0},
        {std::pair(SPIDER, TERRAIN_PUDDLE),           3.0},
        {std::pair(SPIDER, TERRAIN_DRY),              1.0},
        {std::pair(SPIDER, TERRAIN_FIRE),             10.0},
        {std::pair(SPIDER, TERRAIN_ICE),              1.0},
};

// maps <monster type, terrain> to unit move cost
const static std::map<std::pair<monster_type, terrain_type>, float> monster_move_speed_multiplier = {
        // rabbit
        {std::pair(MOB, TERRAIN_PAVEMENT),         1.5},
        {std::pair(MOB, TERRAIN_DEFAULT),          1.0},
        {std::pair(MOB, TERRAIN_MUD),              0.5},
        {std::pair(MOB, TERRAIN_PUDDLE),           0.3},
        {std::pair(MOB, TERRAIN_DRY),              1.0},
        {std::pair(MOB, TERRAIN_FIRE),             5.0},
        {std::pair(MOB, TERRAIN_ICE),              1.1},
        // eagle
        {std::pair(SPRING_BOSS, TERRAIN_PAVEMENT),         1.0},
        {std::pair(SPRING_BOSS, TERRAIN_DEFAULT),          1.0},
        {std::pair(SPRING_BOSS, TERRAIN_MUD),              1.0},
        {std::pair(SPRING_BOSS, TERRAIN_PUDDLE),           1.0},
        {std::pair(SPRING_BOSS, TERRAIN_DRY),              1.0},
        {std::pair(SPRING_BOSS, TERRAIN_FIRE),             1.0},
        {std::pair(SPRING_BOSS, TERRAIN_ICE),              1.0},
        // moose
        {std::pair(SUMMER_BOSS, TERRAIN_PAVEMENT),         1.5},
        {std::pair(SUMMER_BOSS, TERRAIN_DEFAULT),          1.0},
        {std::pair(SUMMER_BOSS, TERRAIN_MUD),              0.8},
        {std::pair(SUMMER_BOSS, TERRAIN_PUDDLE),           0.5},
        {std::pair(SUMMER_BOSS, TERRAIN_DRY),              1.0},
        {std::pair(SUMMER_BOSS, TERRAIN_FIRE),             5.0},
        {std::pair(SUMMER_BOSS, TERRAIN_ICE),              1.1},
        // bear
        {std::pair(FALL_BOSS, TERRAIN_PAVEMENT),         1.2},
        {std::pair(FALL_BOSS, TERRAIN_DEFAULT),          1.0},
        {std::pair(FALL_BOSS, TERRAIN_MUD),              1.0},
        {std::pair(FALL_BOSS, TERRAIN_PUDDLE),           0.8},
        {std::pair(FALL_BOSS, TERRAIN_DRY),              1.0},
        {std::pair(FALL_BOSS, TERRAIN_FIRE),             1.0},
        {std::pair(FALL_BOSS, TERRAIN_ICE),          1.0},
        // penguin
        {std::pair(WINTER_BOSS, TERRAIN_PAVEMENT),   1.0},
        {std::pair(WINTER_BOSS, TERRAIN_DEFAULT),    1.0},
        {std::pair(WINTER_BOSS, TERRAIN_MUD),        0.5},
        {std::pair(WINTER_BOSS, TERRAIN_PUDDLE),     4.0},
        {std::pair(WINTER_BOSS, TERRAIN_DRY),        1.0},
        {std::pair(WINTER_BOSS, TERRAIN_FIRE),       5.0},
        {std::pair(WINTER_BOSS, TERRAIN_ICE),        7.0},
//
//        {std::pair(FINAL_BOSS, TERRAIN_PAVEMENT),    1.0},
//        {std::pair(FINAL_BOSS, TERRAIN_DEFAULT),     1.0},
//        {std::pair(FINAL_BOSS, TERRAIN_MUD),         1.0},
//        {std::pair(FINAL_BOSS, TERRAIN_PUDDLE),      1.0},
//        {std::pair(FINAL_BOSS, TERRAIN_DRY),         1.0},
//        {std::pair(FINAL_BOSS, TERRAIN_FIRE),        1.0},
//        {std::pair(FINAL_BOSS, TERRAIN_ICE),         1.0},
//
//        {std::pair(FIREBALL_BOSS, TERRAIN_PAVEMENT), 1.0},
//        {std::pair(FIREBALL_BOSS, TERRAIN_DEFAULT),  1.0},
//        {std::pair(FIREBALL_BOSS, TERRAIN_MUD),      1.0},
//        {std::pair(FIREBALL_BOSS, TERRAIN_PUDDLE),   1.0},
//        {std::pair(FIREBALL_BOSS, TERRAIN_DRY),      1.0},
//        {std::pair(FIREBALL_BOSS, TERRAIN_FIRE),     1.0},
//        {std::pair(FIREBALL_BOSS, TERRAIN_ICE),      1.0},
//
//        {std::pair(BURROW_BOSS, TERRAIN_PAVEMENT),   1.0},
//        {std::pair(BURROW_BOSS, TERRAIN_DEFAULT),          1.0},
//        {std::pair(BURROW_BOSS, TERRAIN_MUD),              1.0},
//        {std::pair(BURROW_BOSS, TERRAIN_PUDDLE),           1.0},
//        {std::pair(BURROW_BOSS, TERRAIN_DRY),              1.0},
//        {std::pair(BURROW_BOSS, TERRAIN_FIRE),             1.0},
//        {std::pair(BURROW_BOSS, TERRAIN_ICE),              1.0},

        {std::pair(SPIDER, TERRAIN_PAVEMENT),         1.2},
        {std::pair(SPIDER, TERRAIN_DEFAULT),          1.2},
        {std::pair(SPIDER, TERRAIN_MUD),              0.8},
        {std::pair(SPIDER, TERRAIN_PUDDLE),           0.5},
        {std::pair(SPIDER, TERRAIN_DRY),              1.2},
        {std::pair(SPIDER, TERRAIN_FIRE),             10.0},
        {std::pair(SPIDER, TERRAIN_ICE),              1.2},
};

// maps <weather, terrain> to probability
const static std::map<int, std::map<terrain_type, float>> season_terrain_prob = {
        {SPRING,  {{TERRAIN_DEFAULT,  1},
                        {TERRAIN_MUD,      1},
                        {TERRAIN_PUDDLE,   1},
                        {TERRAIN_DRY,      1},
                        {TERRAIN_FIRE,     1},
                        {TERRAIN_ICE,      1}}},
        {SUMMER,  {{TERRAIN_DEFAULT,  1},
                          {TERRAIN_MUD,      0.5},
                          {TERRAIN_PUDDLE,   0.5},
                          {TERRAIN_DRY,      1.2},
                          {TERRAIN_FIRE,     1},
                          {TERRAIN_ICE,      0.3}}},
        {FALL,  {{TERRAIN_DEFAULT,  1},
                          {TERRAIN_MUD,      0.8},
                          {TERRAIN_PUDDLE,   0.8},
                          {TERRAIN_DRY,      0.8},
                          {TERRAIN_FIRE,     0.3},
                          {TERRAIN_ICE,      0.5}}},
        {WINTER,  {{TERRAIN_DEFAULT,  1},
                          {TERRAIN_MUD,      0.5},
                          {TERRAIN_PUDDLE,   0.5},
                          {TERRAIN_DRY,      0.5},
                          {TERRAIN_FIRE,     0.1},
                          {TERRAIN_ICE,      1.2}}},
};

const static std::map<std::pair<int, terrain_type>, float> weather_terrain_prob_multiplier = {
        {std::pair(CLEAR, TERRAIN_DEFAULT), 1.2},
        {std::pair(CLEAR, TERRAIN_MUD), 0.8},
        {std::pair(CLEAR, TERRAIN_PUDDLE), 0.8},
        {std::pair(CLEAR, TERRAIN_DRY), 0.8},
        {std::pair(CLEAR, TERRAIN_FIRE), 0.5},
        {std::pair(CLEAR, TERRAIN_ICE), 0.5},

        {std::pair(RAIN, TERRAIN_DEFAULT), 1.2},
        {std::pair(RAIN, TERRAIN_MUD), 1.0},
        {std::pair(RAIN, TERRAIN_PUDDLE), 1.2},
        {std::pair(RAIN, TERRAIN_DRY), 0.2},
        {std::pair(RAIN, TERRAIN_FIRE), 0.1},
        {std::pair(RAIN, TERRAIN_ICE), 0.3},

        {std::pair(DROUGHT, TERRAIN_DEFAULT), 1.2},
        {std::pair(DROUGHT, TERRAIN_MUD), 0.5},
        {std::pair(DROUGHT, TERRAIN_PUDDLE), 0.3},
        {std::pair(DROUGHT, TERRAIN_DRY), 1.2},
        {std::pair(DROUGHT, TERRAIN_FIRE), 1.0},
        {std::pair(DROUGHT, TERRAIN_ICE), 0.3},

        {std::pair(FOG, TERRAIN_DEFAULT), 1.2},
        {std::pair(FOG, TERRAIN_MUD), 1.0},
        {std::pair(FOG, TERRAIN_PUDDLE), 1.0},
        {std::pair(FOG, TERRAIN_DRY), 0.8},
        {std::pair(FOG, TERRAIN_FIRE), 0.5},
        {std::pair(FOG, TERRAIN_ICE), 0.5},

        {std::pair(SNOW, TERRAIN_DEFAULT), 1.2},
        {std::pair(SNOW, TERRAIN_MUD), 0.8},
        {std::pair(SNOW, TERRAIN_PUDDLE), 0.5},
        {std::pair(SNOW, TERRAIN_DRY), 0.5},
        {std::pair(SNOW, TERRAIN_FIRE), 0.5},
        {std::pair(SNOW, TERRAIN_ICE), 1.2},
};